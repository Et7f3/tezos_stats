// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Json_encoding = require("bs-ocplib-json-typed/lib/js/src/json_encoding.bs.js");
var Bs_fake_ezjsonm = require("../web_client/bs_fake_ezjsonm.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var test_encoding = Json_encoding.obj2(Json_encoding.req(undefined, undefined, "a", Json_encoding.$$int), Json_encoding.opt(undefined, undefined, "bs", Json_encoding.string));

var original_data = "{\"a\":42,\"bs\":\"bucklescript\"}";

var ezjsonm = Bs_fake_ezjsonm.ezjsonm_of_string(original_data);

var obj = Curry._1(Json_encoding.destruct(test_encoding), ezjsonm);

if (!Caml_obj.caml_equal(Json_encoding.construct(test_encoding, obj), ezjsonm)) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "test_ezjsonm.ml",
          6,
          9
        ]
      ];
}

if (Bs_fake_ezjsonm.string_of_ezjsonm(ezjsonm) !== original_data) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "test_ezjsonm.ml",
          7,
          9
        ]
      ];
}

exports.test_encoding = test_encoding;
exports.original_data = original_data;
exports.ezjsonm = ezjsonm;
exports.obj = obj;
/* test_encoding Not a pure module */
