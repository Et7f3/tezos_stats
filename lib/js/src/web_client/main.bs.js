// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Polyfill = require("./polyfill.bs.js");
var Json_encoding = require("bs-ocplib-json-typed/lib/js/src/json_encoding.bs.js");

function ezjsonm_of_string(data) {
  var json = JSON.parse(data);
  var traverse = function (t) {
    var match = Js_json.classify(t);
    if (typeof match === "number") {
      switch (match) {
        case 0 : 
            return /* `Bool */[
                    737456202,
                    false
                  ];
        case 1 : 
            return /* `Bool */[
                    737456202,
                    true
                  ];
        case 2 : 
            return /* Null */870828711;
        
      }
    } else {
      switch (match.tag | 0) {
        case 0 : 
            return /* `String */[
                    -976970511,
                    match[0]
                  ];
        case 1 : 
            return /* `Float */[
                    365180284,
                    match[0]
                  ];
        case 2 : 
            var o = Js_dict.entries(match[0]);
            return /* `O */[
                    79,
                    $$Array.to_list($$Array.map((function (param) {
                                return /* tuple */[
                                        param[0],
                                        traverse(param[1])
                                      ];
                              }), o))
                  ];
        case 3 : 
            return /* `A */[
                    65,
                    List.map(traverse, $$Array.to_list(match[0]))
                  ];
        
      }
    }
  };
  return traverse(json);
}

function string_of_ezjsonm(json) {
  var traverse = function (param) {
    if (typeof param === "number") {
      return null;
    } else {
      var variant = param[0];
      if (variant !== 65) {
        if (variant !== 79) {
          if (variant >= 737456202) {
            if (param[1]) {
              return true;
            } else {
              return false;
            }
          } else {
            return param[1];
          }
        } else {
          return Js_dict.fromList(List.map((function (param) {
                            return /* tuple */[
                                    param[0],
                                    traverse(param[1])
                                  ];
                          }), param[1]));
        }
      } else {
        return $$Array.of_list(List.map(traverse, param[1]));
      }
    }
  };
  return JSON.stringify(traverse(json));
}

console.log("Hello");

var a = Json_encoding.construct;

exports.ezjsonm_of_string = ezjsonm_of_string;
exports.string_of_ezjsonm = string_of_ezjsonm;
exports.a = a;
/*  Not a pure module */
